<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThursdayMeetingBot.TelegramBot</name>
    </assembly>
    <members>
        <member name="T:ThursdayMeetingBot.TelegramBot.Configurations.BotConfiguration">
            <summary>
                Configuration for bot.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Configurations.BotConfiguration.AccessToken">
            <summary>
                Access token.    
            </summary>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration">
            <summary>
                Configuration for an notification.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration.DayOfWeek">
            <summary>
                The day of the week on which the notification will occur.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration.Hour">
            <summary>
                Notification UTC hour.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration.Minute">
            <summary>
                Minute of notification.
            </summary>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Constants.DateTimeConstant">
            <summary>
                Date and time constants.
            </summary>
        </member>
        <member name="F:ThursdayMeetingBot.TelegramBot.Constants.DateTimeConstant.DaysInWeek">
            <summary>
                The number of days in a week.
            </summary>
        </member>
        <member name="F:ThursdayMeetingBot.TelegramBot.Constants.DateTimeConstant.DayOfWeekRussianDescriptions">
            <summary>
                Names of days of the week in Russian in the plural in the genitive case.
            </summary>
        </member>
        <member name="F:ThursdayMeetingBot.TelegramBot.Constants.DateTimeConstant.MoscowTimeZone">
            <summary>
                Moscow time zone.
            </summary>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Controllers.BotConfigurationController">
            <summary>
                Controller for manage bot configuration.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Controllers.BotConfigurationController.#ctor(System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Options.IOptions{ThursdayMeetingBot.TelegramBot.Configurations.BotConfiguration},Microsoft.Extensions.Logging.ILogger{ThursdayMeetingBot.TelegramBot.Controllers.BotConfigurationController})">
            <summary>
                Constructor
            </summary>
            <param name="httpClientFactory"> Factory for creating http clients </param>
            <param name="botOptions"> Bot options </param>
            <param name="logger"> ILogger instance </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Controllers.BotConfigurationController.SetWebHook(ThursdayMeetingBot.TelegramBot.Models.WebHook.WebHookSettingInputModel)">
            <summary>
            Set web hook for current bot
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Controllers.UpdateController">
            <summary>
                Update controller.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Controllers.UpdateController.#ctor(ThursdayMeetingBot.TelegramBot.Interfaces.IBotMessageService)">
            <summary>
                Constructor.
            </summary>
            <param name="botMessageService"> Service for manage bot messages. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Controllers.UpdateController.Post(Telegram.Bot.Types.Update)">
            <summary>
                Post method for receive messages from Bot (Using webhook).
            </summary>
            <param name="update"> New update from bot. </param>
            <returns> Ok Action or error. </returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Dictionaries.TimerDictionary">
            <summary>
                Dictionary of timers.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Dictionaries.TimerDictionary.AddAsync(System.Int64,System.Threading.Timer)">
            <summary>
                Add to dictionary a new key-value pair.
            </summary>
            <param name="id"> Identificator-key. </param>
            <param name="timer"> Timer-value. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Dictionaries.TimerDictionary.DeleteAsync(System.Int64)">
            <summary>
                Stop and delete existing timer.
            </summary>
            <param name="id"> Timer identificator. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Extensions.DateTimeExtensions">
            <summary>
                Date and time extensions.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Extensions.DateTimeExtensions.ToMoscowTime(System.DateTime)">
            <summary>
                Convert UTC time to Moscow time.
            </summary>
            <param name="utcDateTime"> UTC time. </param>
            <returns> Moscow time. </returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Extensions.ServiceCollectionExtensions">
            <summary>
                Extensions for IServiceCollection instance.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Extensions.ServiceCollectionExtensions.AddConfigurationSections(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Add configuration sections.
            </summary>
            <param name="services"> Service collection. </param>
            <param name="configuration"> Configuration. </param>
            <returns> Configurated service collection. </returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Helpers.DateTimeHelper">
            <summary>
                DateTime helper.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Helpers.DateTimeHelper.#ctor(Microsoft.Extensions.Options.IOptions{ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration})">
            <summary>
                Constructor.
            </summary>
            <param name="notificationConfigurationOptions"></param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Helpers.DateTimeHelper.GetFirstNotificationDateTime">
            <summary>
                Get the date and the time of the first notification.
            </summary>
            <returns> Class containing the necessary information about the notification time. </returns>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Helpers.DateTimeHelper.GetDayOfWeekRussianDescription(System.DateTime)">
            <summary>
                Get the day of the week in Russian in the parent plural case.
            </summary>
            <param name="dateTime"> Date with time. </param>
            <returns> Day of the week in Russian in the parent plural case. </returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Interfaces.IBotMessageService">
            <summary>
                Service for processing messages received from the bot.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Interfaces.IBotMessageService.ProcessAsync(Telegram.Bot.Types.Update)">
            <summary>
                Processing a message.
            </summary>
            <param name="update"> Incoming update. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Interfaces.IBotService">
            <summary>
                Service for managing telegram bot client.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Interfaces.IBotService.Client">
            <summary>
                Telegram bot client.
            </summary>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Commands.BaseBotCommand`1">
            <summary>
                Base bot command.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.MediatR.Commands.BaseBotCommand`1.Message">
            <summary>
                Message.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.MediatR.Commands.BaseBotCommand`1.Chat">
            <summary>
                Chat.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Commands.BaseBotCommand`1.#ctor(Telegram.Bot.Types.Message)">
            <summary>
                Constructor.
            </summary>
            <param name="message"> Message. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Commands.StartCommand">
            <summary>
                Command when "/start" received.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Commands.StartCommand.#ctor(Telegram.Bot.Types.Message)">
            <inheritdoc />
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Commands.StopCommand">
            <summary>
                Command when "/start" received.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Commands.StopCommand.#ctor(Telegram.Bot.Types.Message)">
            <inheritdoc />
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.BotCommandHandler">
            <summary>
                Base handler of commands for telegram bot.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.BotCommandHandler.BotService">
            <summary>
                Bot service
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.BotCommandHandler.#ctor(ThursdayMeetingBot.TelegramBot.Interfaces.IBotService)">
            <summary>
                Constructor.
            </summary>
            <param name="botService"> Bot service. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StartCommandHandler">
            <summary>
                Command "/start" handler.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StartCommandHandler.#ctor(Microsoft.Extensions.Logging.ILogger{ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StartCommandHandler},Microsoft.Extensions.Options.IOptions{ThursdayMeetingBot.TelegramBot.Configurations.NotificationConfiguration},ThursdayMeetingBot.TelegramBot.Interfaces.IBotService)">
            <summary>
                Constructor.
            </summary>
            <param name="logger"> Logger. </param>
            <param name="notificationConfigurationOptions"> Notification settings from appsettings. </param>
            <param name="botService"> Bot service. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StartCommandHandler.Handle(ThursdayMeetingBot.TelegramBot.MediatR.Commands.StartCommand,System.Threading.CancellationToken)">
            <summary>
                Handle command.
            </summary>
            <param name="request"> Command. </param>
            <param name="cancellationToken"> Cancellation token. </param>
            <returns></returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StopCommandHandler">
            <summary>
                Command "/stop" handler.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StopCommandHandler.#ctor(Microsoft.Extensions.Logging.ILogger{ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StartCommandHandler},ThursdayMeetingBot.TelegramBot.Interfaces.IBotService)">
            <summary>
                Constructor.
            </summary>
            <param name="logger"> Logger. </param>
            <param name="botService"> Bot service. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.MediatR.Handlers.StopCommandHandler.Handle(ThursdayMeetingBot.TelegramBot.MediatR.Commands.StopCommand,System.Threading.CancellationToken)">
            <summary>
                Handle command.
            </summary>
            <param name="request"> Command. </param>
            <param name="cancellationToken"> Cancellation token. </param>
            <returns></returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime">
            <summary>
                Notification time class.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.Value">
            <summary>
                Value.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.DayOfWeek">
            <summary>
                Day of week.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.RussianDayOfWeekName">
            <summary>
                Russian description of day of week.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.MoscowShortTime">
            <summary>
                Value in Moscow time zone.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.DueTime">
            <summary>
                Time until notification.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.FormattedDueTime">
            <summary>
                Formatted time until notification.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.BotAnswer">
            <summary>
                Bot answer.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.LogMessage">
            <summary>
                Message for logging.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Models.NotificationDateTime.#ctor(System.DateTime)">
            <summary>
                Constructor.
            </summary>
            <param name="dateTime"> The date and time to create the entity for. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Models.WebHook.WebHookSettingInputModel">
            <summary>
                Input model for set web hook action
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Models.WebHook.WebHookSettingInputModel.Uri">
            <summary>
                Which address will be set as webhook.
            </summary>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Models.WebHook.WebHookSettingResult">
            <summary>
                Set web hook api result model.
            </summary>
            <param name="ErrorCode"> Error code. </param>
            <param name="Description"> Description message. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Models.WebHook.WebHookSettingResult.#ctor(System.Int32,System.String)">
            <summary>
                Set web hook api result model.
            </summary>
            <param name="ErrorCode"> Error code. </param>
            <param name="Description"> Description message. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Program">
            <summary>
                App entry point
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Program.Main(System.String[])">
            <summary>
                Main class. 
            </summary>
            <param name="args"> Application arguments. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Program.CreateHostBuilder(System.String[])">
            <summary>
                Creating web app host.
            </summary>
            <param name="args"> Application arguments. </param>
            <returns> Web app host object. </returns>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Program.BuildConfiguration(System.String[])">
            <summary>
                Create application configuration.
            </summary>
            <param name="args"> Application argiments. </param>
            <returns> Application configuration object. </returns>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Services.BotMessageService">
            <inheritdoc />
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Services.BotMessageService.#ctor(Microsoft.Extensions.Logging.ILogger{ThursdayMeetingBot.TelegramBot.Services.BotMessageService},MediatR.IMediator)">
            <summary>
                Constructor.
            </summary>
            <param name="logger"> Logger. </param>
            <param name="mediator"> Mediator. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Services.BotMessageService.ProcessAsync(Telegram.Bot.Types.Update)">
            <inheritdoc />
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Services.BotService">
            <inheritdoc />
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Services.BotService.Client">
            <inheritdoc />
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Services.BotService.#ctor(Microsoft.Extensions.Options.IOptions{ThursdayMeetingBot.TelegramBot.Configurations.BotConfiguration})">
            <summary>
                Constructor
            </summary>
            <param name="botConfigurationOptions"> Bot configuration options. </param>
        </member>
        <member name="T:ThursdayMeetingBot.TelegramBot.Startup">
            <summary>
                Startup class.
            </summary>
        </member>
        <member name="P:ThursdayMeetingBot.TelegramBot.Startup.Configuration">
            <summary>
                Configuration of web application.
            </summary>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Constructor.
            </summary>
            <param name="configuration"> IConfiguration instance. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Method for configure web app services.
            </summary>
            <param name="services"> Web app services collection. </param>
        </member>
        <member name="M:ThursdayMeetingBot.TelegramBot.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
                This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"> IApplication Builder object. </param>
            <param name="env"> IWwbHostEnvironment object. </param>
        </member>
    </members>
</doc>
